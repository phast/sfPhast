/**
 * Подготовка блока, в котором будут размещены элементы выравненные по всей ширине
 */
justify-block()
   text-align justify
   font-size 0
   line-height 0
   text-justify distribute-all-lines

   &:after
      width 100%
      display inline-block
      content ''

justify-item()
   display inline-block
   text-align left
   vertical-align top

/**
 * Добавляет изображение из спрайта
 * @param {string} name - Имя файла иконки без разрешения
 * @param {string} horizontal - Тип выравнияния блока по горизонтали
 * @param {string} vertical - Тип выравнияния блока по вертикали
 */
sprite(name, horizontal = none, vertical = none)
   sprite = $sprite- + name
   width: sprite[2]
   height: sprite[3]
   background: url('../images/sprite.png?' + $sprite-timestamp) sprite[0] sprite[1] no-repeat

   if horizontal is center
      margin-left: round(@width / -2)
      left: 50%
   else if horizontal is left
      left: 0
   else if horizontal is right
      right: 0

   if vertical is center
      margin-top: round(@height / -2)
      top: 50%
   else if vertical is top
      top: 0
   else if vertical is bottom
      bottom: 0

/**
 * Ширина изображения в спрайте
 * @param {string} name - Имя файла иконки без разрешения
 * @return {px} - Возвращяет пиксельное значение ширины
 */
sprite-width(name)
   sprite = $sprite- + name
   return sprite[2]

/**
 * Высота изображения в спрайте
 * @param {string} name - Имя файла иконки без разрешения
 * @return {px} - Возвращяет пиксельное значение высоты
 */
sprite-height(name)
   sprite = $sprite- + name
   return sprite[3]

/**
 * Размеры изображения в спрайте
 * @param {string} name - Имя файла иконки без разрешения
 */
sprite-size(name)
   sprite = $sprite- + name
   width sprite[2]
   height sprite[3]

/**
 * Положение изображения в спрайте
 * @param {string} name - Имя файла иконки без разрешения
 */
sprite-pos(name)
   sprite = $sprite- + name
   background-position sprite[0] sprite[1]


/**
 * Определяет поведение text-decoration при наведении курсором мышки на ссылку
 */
link-decoration(mode = default)
   if mode is default
      text-decoration underline
      &:hover
         text-decoration none
   else if mode is reverse
      text-decoration none
      &:hover
         text-decoration underline
   else if mode is underline
      text-decoration underline
      &:hover
         text-decoration underline
   else if mode is none
      text-decoration none
      &:hover
         text-decoration none

/**
 *
 */
mod(modifier, position = 'def')
   parent = selector()
   if position == 'def'
      &{modifier}
         {parent}
            {block}
   else if position == 'pre'
      {modifier} &
         {parent}
            {block}
   else if position == 'in'
      & {modifier}
         {parent}
            {block}

/**
 * Clearfix
 */
clearfix()
   &:after
      content ''
      display table
      width 100%

/**
 * Fonts
 */
include-font(font-name, file-name, font-weight = normal, font-style = normal)
   @font-face
      font-family font-name
      src url('../fonts/'+file-name+'.eot')
      src url('../fonts/'+file-name+'.eot#iefix') format('embedded-opentype'), url('../fonts/'+file-name+'.woff') format('woff')
      font-weight font-weight
      font-style font-style

/*
 * Line-height
 */
font-height(interval, font-size = 0)
   if font-size is 0
      font-size = @font-size
   line-height unit(interval / font-size, '')


/** @todo: добавить описание*/
_pref($prefs, $spacer = ' ', $parent = selector())
   $sel = ()
   for $pref, index in $prefs
      for $_parent, index in $parent
         push($sel, $_parent + $spacer + $pref)
   return $sel

/** @todo: добавить описание*/
pref($prefs, $spacer = ' ', $parent = selector())
   /{join(', ', _pref($parent, $spacer, $prefs))} {
      {block}
   }

/** @todo: добавить описание*/
_suff($suffs, $spacer = ' ', $parent = selector())
   $sel = ()
   for $suff, index in $suffs
      for $_parent, index in $parent
         push($sel, $_parent + $spacer + $suff)
   return $sel

/** @todo: добавить описание*/
suff($suffs, $spacer = ' ', $parent = selector())
   /{join(', ', _suff($suffs, $spacer, $parent))} {
      {block}
   }

/**
 * Строим простые колонки на основе amcss
 * @param {number} $size - Количество колонок
 * @param {{number|px}} [$margin] - Ширина оступа между колонками
 * @param {{number|px}} [$sidebar-width] - Ширина сайдбара, если он требуется
 * @param {{number|px}} [$width] - Ширина родителя колонок
 */
b-columns-col($size, $margin = 0, $sidebar-width = 0, $width = $page-width)
   $margin = no-unit($margin)
   $width = no-unit($width)
   $attr_size = "'" + 'size:'+$size + "'"
   $attr_sidebar = "'" + 'sidebar' + "'"
   $col_size = ($width - $margin * ($size - 1)) / $size

   if $sidebar-width == 'half'
      $sidebar-width = ($col_size / 2)
   else
      $sidebar-width = no-unit($sidebar-width)

   if $size > 1
      [b-columns~={$attr_size}] > [b-columns-col]
         width percent($col_size, $width)
      [b-columns~={$attr_size}] > [b-columns-col] + [b-columns-col]
         margin-left percent($margin, $width)
      [b-columns~={$attr_size}] > [b-columns-col]:nth-child({$size}n+1)
         margin-left 0
      if $sidebar-width > 0
         $col_size = ($width - $margin * ($size - 1) - $sidebar-width) / ($size - 1)
         [b-columns~={$attr_size}][b-columns~={$attr_sidebar}] > [b-columns-col]
            width percent($col_size, $width)
            &[b-columns-col~='sidebar']
               width percent($sidebar-width, $width)

/**
 * Боредр радиус без префиксов
 */
border-radius()
   border-radius arguments

/**
 * CSS3 колонки с префиксами
 */
columns()
   -moz-columns arguments
   -webkit-columns arguments
   columns arguments

/**
 * Правильный clearfix на основе свойста clear
 */
clear()
   if arguments == 'custom'
      &:before,
      &:after
         display table
         content ''
      &:after
         clear both
   else
      clear arguments

/**
 * Добавляет изображение
 * @param {string} path - Путь до файла в папке "images"
 * @param {string} horizontal - Тип выравнияния блока по горизонтали
 * @param {string} vertical - Тип выравнияния блока по вертикали
 */
icon(path, horizontal = none, vertical = none)
   width image-width(path)
   height image-height(path)
   background url('../images/'+path) 0 0 no-repeat

   if horizontal is center
      margin-left (@width / -2)
      left 50%
   else if horizontal is left
      left 0
   else if horizontal is right
      right 0

   if vertical is center
      margin-top (@height / -2)
      top 50%
   else if vertical is top
      top 0
   else if vertical is bottom
      bottom 0

/**
 * Ширина изображения
 * @param {path} name - Путь до файла изображения внутри папки images
 * @return {px} - Возвращяет пиксельное значение ширины
 */
image-width(path)
   return image-size('../web/'+path)[0]

/**
 * Высота изображения
 * @param {path} name - Путь до файла изображения внутри папки images
 * @return {px} - Возвращяет пиксельное значение высоты
 */
image-height(path)
   return image-size('../web/'+path)[1]

/**
 * Размер изображения
 * @param {path} name - Путь до файла изображения внутри папки images
 */
image-siz(path)
   size = image-size('../web/'+path)
   width size[0]
   height size[1]

/**
 * Переделывает поведение свойста text-decoration
 */
text-decoration()
   if arguments == link
      text-decoration underline
      +hover()
         text-decoration none
   else if arguments == reverse
      text-decoration none
      +hover()
         text-decoration underline
   else if arguments == underline
      text-decoration underline
      +hover()
         text-decoration underline
   else if arguments == none
      text-decoration none
      +hover()
         text-decoration none
   else
      text-decoration arguments

/**
 * Сокращяет написание классов для состояния наведения
 * @param {string} parent - Родительский селектор на который производится наведение
 */
hover(parent = null)
   if parent == null
      &:hover,
      &.is-hover
         {block}
   else
      {parent}:hover &,
      {parent}.is-hover &
         {block}
/** @todo: добавить описание*/
hvr($sel = selector())
   return _suff((':hover' '.is-hover'), '', $sel)

/**
 * Сброс стилей для списков
 */
reset-ul()
   margin 0
   padding 0
reset-li()
   margin 0
   padding 0
   list-style none
   &:before {
      float none
      margin 0
      padding 0
      background transparent
      content normal
   }

/**
 * Возвращяет процентное отношение [val] к [width]
 * @param {{number|unit}} val
 * @param {{number|unit}} width
 */
percent(val, width = $page-width)
   wp = unit(no-unit(val)*100/width, '%')
   return wp

/**
 * Убирает единицу измерения
 * @param {{number|unit}} value
 * @return {number}
 */
no-unit(value)
   return unit(value, '')
